3.1 简单变量
    3.1.1 变量名
    3.1.2 整型
    3.1.3 整型short、int、long和long long
    3.1.4 无符号类型
    3.1.5 选择整型类型
    3.1.6 整型字面值
    3.1.7 C++如何确定常量的类型
    3.1.8 char类型：字符和小整数
    3.1.9 bool类型
3.2 const限定符
3.3 浮点数
    3.3.1 书写浮点数
    3.3.2 浮点类型
    3.3.3 浮点常量
    3.3.4 浮点数的优缺点
3.4 C++算术运算符
    3.4.1 运算符优先级和结合性
    3.4.2 除法分支
    3.4.3 求模运算符
    3.4.4 类型转换
    3.4.5 C++11中的auto声明
3.5 总结
3.6 复习题
    3.6.1 C++提供好几种整型，这样便于能够根据程序的具体要求选择最合适的整型
    3.6.2
        a. short a = 80;
        b. unsigned int b = 42110;
        c. long long c = 3000000000;
    3.6.3 C++提供当值超出整型范围时，其值将为范围另一端的取值的措施来防止超出整型的范围
    3.6.4 33是一个int constant；33L是一个long double constant
    3.6.5 char grade = 65 与 char grade = 'A'等价
    3.6.6 
        a. char c = 88；然后printf("%c", c);即可知道编码88的字符是什么
        b. 
    3.6.7 将long值赋给double变量也会导致舍入误差；将long long值赋给double变量会导致舍入误差
    3.6.8 
        a. 8 * 9 + 2 = 74
        b. 6 * 3 / 4 = 4
        c. 3 / 4 * 6 = 0
        d. 6.0 * 3 / 4 = 4.5
        e. 15 % 4 = 3
    3.6.9 
        double x1 = 2.5, x2 = 3.5;        
        std::cout<<(int)((int)x1 +(int)x2)<<std::endl;
        std::cout<<(int)(x1+x2)<<std::endl;
    3.6.10
        a. int类型
        b. float类型
        c. char类型
        d. char32_t类型
        e. float类型
3.7 编程练习
    详见目录 ./program pratice